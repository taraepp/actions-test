name: Actions Workflow
# 'on' can also be an object
on: 
  # external event: repository_dispatch
  repository_dispatch:
    # these are custom types that you can put in the request body json obj as event_type
    types: [postman]
  #push:
    #branches: # can also specify branch for pr, where it would be triggered when request to merge into that branch
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      #- 'feature-*' # pattern match
     # - '!develop' #can ignore with NOT branch (!), should be put at end
    #branches-ignore: cannot use branches and branches-ignore at the same time
      #- main
    #tags: # can also tags-ignore, same as branches
      #- v1.*
    #paths: # or paths-ignore
      #- '**.js' #only run if pushing js files (and only js files)
      #- '!filename.js'
      #- 'docs/**' filter by location
  #schedule:
  #minutes, hours, day of month, month, day of week- always UTC
   #- cron: "* * * * *" # every minute
   # - cron: "1,2 * * * *" # at minute 1 and 2
   #- cron: "1-3 * * * *" # at minute 1, 2, and 3...
   #- cron: "0/15 * * * *" # starting at minute 0, every 15 minutes
  pull_request:
    types: [closed, assigned, opened, reopened]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: client payload from API
        run: echo ${{ github.event.client_payload.env }}
      - name: List Files
      # sha: the commit, ref: the branch. For a PR, the ref will be the result of merging 'new branch' into 'main branch', so that you can test against it properly
        run: |
          pwd
          ls -a
          echo $GITHUB_SHA
          echo $GITHUB_REF
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo "${{ github.token }}"
      # to clone the repo, use predefined action made by GH
      - name: Checkout
        uses: actions/checkout@v3
      - name: List files after Checkout
        run: |
          pwd
          ls -a
      - name: Simple JS Action
        id: greet
        # uses takes a reference to an action
          #uses: ./our-own-action
          #uses: githubUser/githubRepo@githubBranchOrVersionOrCommit
          # commit is safest. v1 will use v1.6 if available (latest minor version)
        uses: actions/hello-world-javascript-action@v1
        with:
        #input defined by the action
          who-to-greet: Tara
      - name: Log Greeting Time
      # show output from previous step by the id we gave it
        run: echo "${{ steps.greet.outputs.time}}" 